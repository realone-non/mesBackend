spring:
  # mySql
  datasource:
    #url: jdbc:mysql://non.cv2ps1sa1sm9.ap-northeast-2.rds.amazonaws.com:3306/non
    url: jdbc:mysql://mes-dev.cyyxmbrc9eeg.ap-northeast-2.rds.amazonaws.com:3306/mes-dev
#    serverTimezone=UTC&characterEncoding=UTF-8
    username: admin
    password: SilverStar01!#
    driver-class-name: com.mysql.cj.jdbc.Driver

  # jpa
  jpa:
    hibernate:
      ddl-auto: validate # validate 바꿔주세요ㅜㅜ
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        jdbc:
          batch_size: 1000

  # mongoDB
  data:
    mongodb:
      username: root
      password: SilverStar01!@
      authentication-database: admin
      port: 27017
      database: NON
      host: ec2-3-35-140-192.ap-northeast-2.compute.amazonaws.com

  # log
  logging:
    level:
      org.hibernate.SQL: debug
      org.hibernate.type: trace

  h2:
    console:
      enabled: true
  server:
    port : 8081

    servelet:
      session:
        timeout: 30
#      context-path : /swagger-ui/index.html
    ssl:
      enabled: true

  # multipartFile
  servlet:
     multipart:
       max-file-size: 10MB
       max-request-size: 40MB

  freemarker:
    check-template-location: false
  mvc:
    converters:
      preferred-json-mapper: gson       # https://dblog94.tistory.com/entry/springframeworkhttpconverterHttpMessageNotWritableException-Could-not-write-JSON-JsonObject

# aws s3 bucket
cloud:
  aws:
    credentials:
      accessKey: AKIAQFOAKXS7ACQ2KTMD
      secretKey: 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
    region:
      static: ap-northeast-2
    bucketName: mes-develop
    stack:
      auto: false
logging:
  level:
    com:
      amazonaws:
        util:
          EC2MetadataUtils: ERROR

server:
  error:
    include-exception: true  # Response에 Exception을 표시할지
    include-message: always   # Response에 Exception Message를 표시할지
    include-stacktrace: on_param  # Response에 Stack Trace를 표시할지
    whitelabel:
      enabled: true   # 에러 발생 시 Spring 기본 에러 페이지 노출 여부

# swagger ui
springdoc:
  swagger-ui:
    disable-swagger-default-url: true # 기본 petstore URL 비활성화
    path: /                     # swagger-ui HTML 문서의 사용자 정의 경로
    operations-sorter: alpha    # ui 정렬
    tags-sorter: alpha
  api-docs:
    path: /api-docs

# jwt
jwt:
  token:
    secret-key: silverstarmesbackendapplication190501    # hash 에 사용되는 키
    header: Authorization                                # authorization 헤더로 전달
